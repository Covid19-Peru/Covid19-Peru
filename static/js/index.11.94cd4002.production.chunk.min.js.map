{"version":3,"sources":["components/DatosRegionesPeru.js"],"names":["DatosRegionesPeru","useState","Country","Provinces","datosRegiones","setDatosRegiones","indexDatosRegiones","setIndexDatosRegiones","loadingRegiones","setLoadingRegiones","actualizarComponente","setActualizarComponente","useEffect","a","axios","datos","data","ObtensionDatos","fecha","moment","restarFecha","undefined","format","subtract","className","sx","borderBottomStyle","borderBottomColor","borderBottomWidth","id","value","data-live-search","data-show-subtext","onChange","e","currentTarget","backgroundColor","color","maxWidth","map","datoRegion","Object","keys","provincia","index","key","onClick","role","datoDepartamentoPeru","console","error","DatosDepartamento"],"mappings":"+SA2FeA,UArFf,WAA8B,IAAD,EACiBC,mBAAS,CAAC,CAACC,QAAQ,GAAGC,UAAU,MADjD,WAClBC,EADkB,KACHC,EADG,OAE2BJ,mBAAS,YAFpC,WAElBK,EAFkB,KAEEC,EAFF,OAGqBN,oBAAS,GAH9B,WAGlBO,EAHkB,KAGDC,EAHC,OAI+BR,oBAAS,GAJxC,WAIlBS,EAJkB,KAIIC,EAJJ,KAMzBC,qBAAW,YACa,+BAAG,4BAAAC,EAAA,6DACnBJ,GAAmB,GADA,SAECK,IAChB,4DAHe,OAEbC,EAFa,OAKnBV,EAAiBU,EAAMC,MACvBP,GAAmB,GANA,2CAAH,qDAQpBQ,KACD,CAACP,IAOJ,IAAMQ,EAAQ,WACV,IAAMA,EAAQC,MAEd,OARJ,SAASC,EAAYF,GACjB,YAAwFG,IAApFjB,EAAc,GAAGD,UAAUG,GAA3B,UAAkDY,EAAMI,OAAO,gBAAuCJ,EACnGE,EAAYF,EAAMK,SAAS,EAAG,MAKbH,CAAYF,GAAOI,OAAO,eAetD,OACI,8BACI,uBAASE,UAAU,uCACf,mBAAKA,UAAU,eACX,kBAAIC,GAAI,CAACC,kBAAkB,QAASC,kBAAkB,eAAeC,kBAAkB,SACvF,mBAAKJ,UAAU,kBACX,kBAAIA,UAAU,kBAAd,8BACI,mBAAKA,UAAU,wBACX,sBAAQK,GAAG,iBAAiBC,MAAOxB,EAAoByB,mBAAiB,OAAOC,oBAAkB,OAAOR,UAAU,gBAAgBS,SAAU,SAAAC,GAAC,OAAI3B,EAAsB2B,EAAEC,cAAcL,QAAQL,GAAI,CAACW,gBAAgB,cAAeC,MAAM,OAAQC,SAAU,UAEnP9B,EAEI,kDAEHJ,EAAemC,KAAK,SAACC,GAAD,OACjBC,OAAOC,KAAKF,EAAWrC,WAAWoC,KAAK,SAACI,EAAUC,GAAX,OACnC,sBAAQC,IAAKD,EAAOd,MAAOa,GAAYA,WAM/D,sBAAQnB,UAAU,kBAAkBsB,QAAS,kBAAMnC,GAAyBD,KAA5E,oCAGJ,mBAAKc,UAAU,aACX,mBAAKA,UAAU,cAAcC,GAAI,CAACY,MAAM,qBAEhC7B,EAEA,mBAAKgB,UAAU,8BAA8BuB,KAAK,WAElD,8BACI,+CACA,sBA9CN,WACtB,IACI,IAAIC,EAAuB5C,EAAc,GAAGD,UAAUG,GAAoBY,KAK1E,MAJmC,kBAAzB8B,IACNC,QAAQC,MAAM,4DACdF,EAAuB,8BAEpBA,EACV,MAAOE,GACJD,QAAQC,MAAM,2BAA2BA,IAqCZC","file":"static/js/index.11.94cd4002.production.chunk.min.js","sourcesContent":["/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\"\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../assets/styles/css/style.css'\r\nimport moment from 'moment'\r\nfunction DatosRegionesPeru() {\r\n    const [datosRegiones, setDatosRegiones] = useState([{Country:'',Provinces:{}}]);\r\n    const [indexDatosRegiones, setIndexDatosRegiones] = useState('AMAZONAS');\r\n    const [loadingRegiones, setLoadingRegiones] = useState(true);\r\n    const [actualizarComponente, setActualizarComponente] = useState(false);\r\n\r\n    useEffect( () => {\r\n        const ObtensionDatos = async () =>{\r\n            setLoadingRegiones(true);\r\n            const datos = await axios(\r\n                'https://covid19peru.now.sh/vistas/data/dataByRegion.json',\r\n            );\r\n            setDatosRegiones(datos.data)\r\n            setLoadingRegiones(false)   \r\n        }\r\n        ObtensionDatos();\r\n    }, [actualizarComponente]);\r\n\r\n    function restarFecha(fecha) {\r\n        if (datosRegiones[0].Provinces[indexDatosRegiones][`${fecha.format('DD-MM-YYYY')}`] !== undefined) return fecha;\r\n        return restarFecha(fecha.subtract(1, 'd'));\r\n    }\r\n    \r\n    const fecha = () =>{\r\n        const fecha = moment();\r\n        const fechaSeleccionada=restarFecha(fecha).format('DD-MM-YYYY')\r\n        return fechaSeleccionada\r\n    }\r\n    const DatosDepartamento = () =>{\r\n        try{\r\n            let datoDepartamentoPeru = datosRegiones[0].Provinces[indexDatosRegiones][fecha()]\r\n            if(typeof datoDepartamentoPeru !== 'number'){\r\n                console.error(\"Parece que devuelve otro tipo de dato diferente a number\")\r\n                datoDepartamentoPeru = 'Parece que no hay datos :('\r\n            }\r\n            return datoDepartamentoPeru\r\n        }catch (error){\r\n            console.error(\"Error Datos Departamento\"+error)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <section className=\"container text-center DatosRegiones\">\r\n                <div className=\"text-center\">\r\n                    <hr sx={{borderBottomStyle:`solid`, borderBottomColor:'borderNavbar',borderBottomWidth:'1px'}}></hr>\r\n                    <div className=\"my-3 container\">\r\n                        <h1 className=\"titulo-seccion\">Selecciona tu Departamento</h1>\r\n                            <div className=\"container form-group\">\r\n                                <select id=\"select_country\" value={indexDatosRegiones} data-live-search=\"true\" data-show-subtext=\"true\" className=\"custom-select\" onChange={e => setIndexDatosRegiones(e.currentTarget.value)} sx={{backgroundColor:'transparent', color:'text', maxWidth: '200px'}}>\r\n                                    {\r\n                                        loadingRegiones\r\n                                        ?\r\n                                            <option>Obteniendo datos ...</option>\r\n                                        :\r\n                                        (datosRegiones).map( (datoRegion) =>(\r\n                                            Object.keys(datoRegion.Provinces).map( (provincia,index)=>(\r\n                                                <option key={index} value={provincia}>{provincia}</option>\r\n                                            ))\r\n                                        ))\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        <button className=\"btn btn-primary\" onClick={() => setActualizarComponente(!actualizarComponente)}>Actualizar informaci√≥n ahora</button>\r\n                    </div>\r\n                    \r\n                    <div className=\"container\">\r\n                        <div className=\"text-center\" sx={{color:'casosCoronavirus'}}>\r\n                            {\r\n                                loadingRegiones \r\n                                ?\r\n                                <div className=\"spinner-border text-primary\" role=\"status\"></div> \r\n                                :\r\n                                <>\r\n                                    <h2> Casos de Coronavirus</h2>\r\n                                    <h3>{DatosDepartamento()}</h3>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\nexport default DatosRegionesPeru"],"sourceRoot":""}